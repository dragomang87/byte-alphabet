Hexadecimal Alphabet
    0x0 = 0b0000
    0x1 = 0b0001
    0x2 = 0b0010
    0x3 = 0b0011
    0x4 = 0b0100
    0x5 = 0b0101
    0x6 = 0b0110
    0x7 = 0b0111
    0x8 = 0b1000
    0x9 = 0b1001
    0xA = 0b1010
    0xB = 0b1011
    0xC = 0b1100
    0xD = 0b1101
    0xE = 0b1110
    0xF = 0b1111


Proposed byte alphabet
  - 255 symbols = 8 bits = 2 hex characters
  - we can split into 5 and 3 bits
    - 5 bits get unique symbols
    - 3 bits define accented symbols (the base 5bit symbols with diacritics)

Alphabet for lower 5 bits (duotrigentidecimal alphabet)
                                  16      20      24      28      32
                                  |       |       |       |       |
    0 1 2 3 4 5 6 7 8 9 A B C D E F G H J K L M N P Q R S T W X Y Z
    |                             | |                             |
    0x00                       0x0F 0x10                          0x1F

    Excluded: must exclude 4 charachters
    - I: too similar to 1
    - O: too similar to zero
    - U: too similar to V and Union, V is more unique in meaning
    - V: phonetically too similar to W, phonetically ambiguous in german


Alphabet for upper 3 bits: repeat the 5 bit alphabet with 8 variations
    - base alphabet above
    - underscored / underbar
    - barred/upperscored / macron
    - horizontal striked through

    - tilde
    - slanted strike? accent left? accent right
    - hat / circumflex
    - double dot


Full byte symbol table
  - depending on the font they might be badly displayed
  - for example in tilde 0 and overline 0 below,
   the diacritics don't show without some text before it

    0x000.....: 0 1 2 3 4 5 6 7 8 9 A B C D E F G H J K L M N P Q R S T W X Y Z
    0x001.....: 0̲ 1̲ 2̲ 3̲ 4̲ 5̲ 6̲ 7̲ 8̲ 9̲ A̲ B̲ C̲ D̲ E̲ F̲ G̲ H̲ J̲ K̲ L̲ M̲ N̲ P̲ Q̲ R̲ S̲ T̲ W̲ X̲ Y̲ Z̲
    0x010.....: 0̶ 1̶ 2̶ 3̶ 4̶ 5̶ 6̶ 7̶ 8̶ 9̶ A̶ B̶ C̶ D̶ E̶ F̶ G̶ H̶ J̶ K̶ L̶ M̶ N̶ P̶ Q̶ R̶ S̶ T̶ W̶ X̶ Y̶ Z̶
    0x011.....: ̅0 ̅1 ̅2 ̅3 ̅4 ̅5 ̅6 ̅7 ̅8 ̅9 ̅A ̅B ̅C ̅D ̅E ̅F ̅G ̅H ̅J ̅K ̅L ̅M ̅N ̅P ̅Q ̅R ̅S ̅T ̅W ̅X ̅Y ̅Z
    → count from bottom up: " " = 00, "_" = 01, "-" = 10, "¯" = 11

    0x100.....: ̃0 ̃1 ̃2 ̃3 ̃4 ̃5 ̃6 ̃7 ̃8 ̃9 ̃A ̃B ̃C ̃D ̃E ̃F ̃G ̃H ̃J ̃K ̃L ̃M ̃N ̃P ̃Q ̃R ̃S ̃T ̃W ̃X ̃Y ̃Z
    0x101.....: 0̸ 1̸ 2̸ 3̸ 4̸ 5̸ 6̸ 7̸ 8̸ 9̸ A̸ B̸ C̸ D̸ E̸ F̸ G̸ H̸ J̸ K̸ L̸ M̸ N̸ P̸ Q̸ R̸ S̸ T̸ W̸ X̸ Y̸ Z̸
    0x110.....: ̂0 ̂1 ̂2 ̂3 ̂4 ̂5 ̂6 ̂7 ̂8 ̂9 ̂A ̂B ̂C ̂D ̂E ̂F ̂G ̂H ̂J ̂K ̂L ̂M ̂N ̂P ̂Q ̂R ̂S ̂T ̂W ̂X ̂Y ̂Z
    0x111.....: ̈0 ̈1 ̈2 ̈3 ̈4 ̈5 ̈6 ̈7 ̈8 ̈9 ̈A ̈B ̈C ̈D ̈E ̈F ̈G ̈H ̈J ̈K ̈L ̈M ̈N ̈P ̈Q ̈R ̈S ̈T ̈W ̈X ̈Y ̈Z
    → ¨ is 11, one 1 for each dot
    → / is 01, because the upper part of / is to the right
    → ^ is 10, because the single 1 in 10 is in the most significant position
    → ~ is 00, because is the other flat simbol


Special annotations:
  - double symbols can beconveniently represented with double stroke
    𝟘 = 0x00 = 0 (normal)
    𝟙 = 0x11 = H (normal)
    𝟚 = 0x22 = 2̲ (underline)
    𝟛 = 0x33 = K̲ (underline)
    𝟜 = 0x44 = 4̶ (striked)
    𝟝 = 0x55 = M̶ (striked)
    𝟞 = 0x66 = 6 (overline)
    𝟟 = 0x77 = P (overline)
    𝟠 = 0x88 = 8 (tilde)
    𝟡 = 0x99 = R (tilde)
    𝔸 = 0xAA = A̸ (slash)
    𝔹 = 0xBB = T̸ (slash)
    ℂ = 0xCC = ̂C (hat)
    𝔻 = 0xDD = ̂X (hat)
    𝔼 = 0xEE = ̈E (umlaut)
    𝔽 = 0xFF = ̈Z (umlaut)


CURRENT PROBLEMS
  - some the diacritics are overlapping too much with the symbols to be distinguishable
    - maybe greek and cyrillic to got to 64 symbols and only 4 diacritics?
    - where is the fix? font or program?
  - they are hard to input, so maybe they are good only for output?
    - improve input mechanism?
  - Some souble strokes that make no sense: because the base symbol is not in hex
    𝔾 = 0xGG
    ℍ = 0xHH
    𝕁 = 0xJJ
    𝕂 = 0xKK
    𝕃 = 0xLL
    𝕄 = 0xMM
    ℕ = 0xNN
    ℙ = 0xPP
    ℚ = 0xQQ
    ℝ = 0xRR
    𝕊 = 0xSS
    𝕋 = 0xTT
    𝕎 = 0xWW
    𝕏 = 0xXX
    𝕐 = 0xYY
    ℤ = 0xZZ
